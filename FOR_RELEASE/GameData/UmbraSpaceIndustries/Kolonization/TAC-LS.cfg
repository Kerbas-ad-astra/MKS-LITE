@PART[*_AgModule]:NEEDS[TACLifeSupport]
{
	@MODULE[ModuleResourceConverter,Agroponics]
	{
		// Get original input of mulch and output of supplies and compute the equivalent number of Kerbals

		%MulchIn = #$INPUT_RESOURCE:HAS[#ResourceName[Mulch]]/Ratio$
		@MulchIn /= #$@LIFE_SUPPORT_SETTINGS/WasteAmount$
		%SuppliesOut = #$OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]/Ratio$
		@SuppliesOut /= #$@LIFE_SUPPORT_SETTINGS/SupplyAmount$

		// Now change to the same equivalent number of Kerbals for TAC-LS resources
		@INPUT_RESOURCE:HAS[#ResourceName[Mulch]]
		{
			@ResourceName = Waste
			@Ratio = #$../MulchIn$
			@Ratio *= 0.000001539351852
		}
		INPUT_RESOURCE
		{
			ResourceName = WasteWater
			Ratio = #$../MulchIn$
			@Ratio *= 0.000014247685185 
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = #$../MulchIn$
			@Ratio *= 0.00148012889876 
		}

		@OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]
		{
			@ResourceName = Food
			@Ratio = #$../SuppliesOut$
			@Ratio *= 0.000016927083333 

			%DumpExcess = True
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.000011188078704 

			%DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.001713537562385 

			%DumpExcess = True
		}
	}
	
	%CrewCapacityDeployed = 1	// assumption, might be more

    	// add TAC life support
	MODULE
	{
		name = LifeSupportModule
	}
	
	// add TAC resources
	!RESOURCE[Supplies] {}
	RESOURCE
	{
		name = Food
		amount = 0
		@maxAmount = 1.097 // 2 days worth from TAC-LS
		@maxAmount *= #$/CrewCapacityDeployed$
		@maxAmount *=6.1728395 // from 200 Supplies ~= 12 days worth
		isTweakable = True
	}
    	RESOURCE
	{
		name = Oxygen
		maxAmount = 111.038
		@maxAmount *= #$/CrewCapacityDeployed$
		@maxAmount *=6.1728395
		amount = #$maxAmount$
		isTweakable = True
	}
    	RESOURCE
	{
		name = Water
		amount = 0
		maxAmount = 0.725
		@maxAmount *= #$/CrewCapacityDeployed$
		@maxAmount *=6.1728395
		isTweakable = True
	}	
}

// assumptions: deployed HabModule is intended to have a CrewCapacity of 4
@PART[MKSL_HabModule]:NEEDS[TACLifeSupport]
{
	%CrewCapacityDeployed = 4

	// add TAC life support
	MODULE
	{
		name = LifeSupportModule
	}

	// add TAC resources
	!RESOURCE[Supplies] {}
	RESOURCE
	{
		name = Food
		amount = 0
		@maxAmount = 1.097 // from TAC-LS 
		@maxAmount *= #$/CrewCapacityDeployed$
		@maxAmount *=6.1728395
		isTweakable = True
	}
	RESOURCE
	{
		name = Oxygen
		maxAmount = 111.038
		@maxAmount *= #$/CrewCapacityDeployed$
		@maxAmount *=6.1728395
		amount = #$maxAmount$
		isTweakable = True
	}	
	RESOURCE
	{
		name = Water
		amount = 0
		maxAmount = 0.725
		@maxAmount *= #$/CrewCapacityDeployed$
		@maxAmount *=6.1728395
		isTweakable = True
	}	
	!RESOURCE[Mulch] {}
	RESOURCE
	{
		name = CarbonDioxide
		amount = 0
		@maxAmount = 95.913
		@maxAmount *= #$/CrewCapacityDeployed$
		@maxAmount *=6.1728395
		isTweakable = True
	}
	RESOURCE
	{
		name = WasteWater
		amount = 0
		maxAmount = 0.924
		@maxAmount *= #$/CrewCapacityDeployed$
		@maxAmount *=6.1728395
		isTweakable = True
	}
	RESOURCE
	{
		name = Waste
		amount = 0
		maxAmount = 0.1
		@maxAmount *= #$/CrewCapacityDeployed$
		@maxAmount *=6.1728395
		isTweakable = True
	}
}

@PART[MKSL_ILM]:NEEDS[TACLifeSupport]
{
	@MODULE[FStextureSwitch2]
	{
		@textureNames = UmbraSpaceIndustries/MKS-LITE/Assets/SW_01;UmbraSpaceIndustries/MKS-LITE/Assets/SW_02;UmbraSpaceIndustries/MKS-LITE/Assets/SW_03;UmbraSpaceIndustries/MKS-LITE/Assets/SW_04;UmbraSpaceIndustries/MKS-LITE/Assets/SW_05;
		@textureDisplayNames = Raw Materials;Refined Goods;Supplies;Commodities;Waste
		@fuelTankSetups = 0;1;2;3;4
	}
	@MODULE[FSfuelSwitch]
	{
		@resourceNames = Dirt,Ore;MaterialKits;Food,Water,Oxygen;RareMetals,ExoticMinerals;Waste,WasteWater,CarbonDioxide
		// 35 supplies = two day's worth of storage
		@resourceAmounts = 35,7;70;1.097,0.725,111.038;35,35;0.1,0.924,95.913
		@initialResourceAmounts = 0,0;0,0;0,0,0;0,0;0,0,0;
		@tankCost = 3500;3500;3500;3500;3500
		@tankMass = 0;0;0;0;0;
	}
}

@PART[*_Aeroponics]:NEEDS[TACLifeSupport]
{
	@MODULE[ModuleResourceConverter,Cultivator]
	{
		%SuppliesOut = #$OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]/Ratio$
		@SuppliesOut /= #$@LIFE_SUPPORT_SETTINGS/SupplyAmount$

		@OUTPUT_RESOURCE:HAS[#ResourceName[Supplies]]
		{
			@ResourceName = Food
			@Ratio = #$../SuppliesOut$
			@Ratio *= 0.000016927083333 
 
			%DumpExcess = True
		}
		// Maybe better to reduce water consumption by this amount? But it doesn't really matter...
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.000011188078704 
			%DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = #$../SuppliesOut$
			@Ratio *= 0.001713537562385 
			%DumpExcess = True
		}
	}
}
@PART[*]:HAS[@MODULE[ModuleLifeSupportRecycler]]:NEEDS[TACLifeSupport]
{
	@MODULE[ModuleLifeSupportRecycler]
	{
		// Change module to a regular resource converter
		@name = ModuleResourceConverter
		// ReplacementParts don't exist without USI-LS so remove them or the converter would never work
		!INPUT_RESOURCE:HAS[#ResourceName[ReplacementParts]] {}
	
		INPUT_RESOURCE
		{
			ResourceName = Waste
			Ratio = #$../CrewCapacity$
			@Ratio *= 0.000001539351852
		}
		INPUT_RESOURCE
		{
			ResourceName = WasteWater
			Ratio = #$../CrewCapacity$
			@Ratio *= 0.000014247685185 
		}
		INPUT_RESOURCE
		{
			ResourceName = CarbonDioxide
			Ratio = #$../CrewCapacity$
			@Ratio *= 0.00148012889876 
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Food
			Ratio = #$../CrewCapacity$
			@Ratio *= #$../RecyclePercent$
			@Ratio *= 0.000016927083333 
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = #$../CrewCapacity$
			@Ratio *= #$../RecyclePercent$
			@Ratio *= 0.000011188078704 
			DumpExcess = True
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = #$../CrewCapacity$
			@Ratio *= #$../RecyclePercent$
			@Ratio *= 0.001713537562385 
			DumpExcess = True
		}
	}	
}
